@import 'variables';
@import 'helpers';



//WRAP YOUR GRID IN .GRID CLASS
.bs-grid {
    margin: 0 auto;
    max-width: config(grid-width);
    &:after {
        visibility: hidden;
		display: block;
		font-size: 0;
		content: " ";
		clear: both;
		height: 0;
    }
}


[class*='row-'] {
    float: left;
    padding: config(col-op);
}

//JUST FOR THE DEMO
.col{
    background: color(default);
    padding: config(col-ip);
}



// CREATES CSS FOR GRID
@for $i from config(grid-start) through config(grid-end) {
    .row-#{$i} {
        width: config(full) / $i;
    }
}

//STATIC WIDTHS
.row-20 { width: config(full) - 80; }
.row-25 { width: config(full) - 75; }
.row-30 { width: config(full) - 70; }
.row-35 { width: config(full) - 65; }
.row-40 { width: config(full) - 60; }
.row-45 { width: config(full) - 55; }
.row-50 { width: config(full) - 50; }
.row-55 { width: config(full) - 45; }
.row-60 { width: config(full) - 40; }
.row-65 { width: config(full) - 35; }
.row-70 { width: config(full) - 30; }
.row-75 { width: config(full) - 25; }
.row-80 { width: config(full) - 20; }

@media screen and (max-width: breakpoint(desktop)) {
    .row-10, {
        width: config(half);
    }
    .row-11, {
        width: config(full);
    }
    .row-12, {
        width: config(third);
    }
}

@media screen and (max-width: breakpoint(tablet-lg)) {
    .row-7, {
        width: config(full);
    }
    .row-8, {
        width: config(half);
    }
    .row-9, {
        width: config(third);
    }
}

@media screen and (max-width: breakpoint(tablet)) {
    .row-5, {
        width: config(full);
    }
    .row-6, {
        width: config(third);
    }
}

@media screen and (max-width: breakpoint(phone)) {
    .row-4, {
        width: config(half);
    }
}
